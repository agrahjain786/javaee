package com.techlabs.controller;

import java.io.IOException;
import java.util.List;

import javax.annotation.Resource;
import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
import javax.sql.DataSource;

import com.techlabs.dao.BankDAO;
import com.techlabs.dao.CustomerDAO;
import com.techlabs.entity.Customer;
import com.techlabs.entity.Transaction;


@WebServlet("/user")
public class CustomerController extends HttpServlet {
	private static final long serialVersionUID = 1L;
       
	private CustomerDAO customerDao;

	 @Resource(name = "jdbc/bankdb")
	 private DataSource dataSource;

	 @Override
	 public void init() throws ServletException {

		  super.init();
		 customerDao = new CustomerDAO(dataSource);
	 }

	
	 protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {

			String command;

			command = request.getParameter("command");

			if (command == null) {
				command = "view_customer_home";
			}

			switch (command) {
			case "new_transaction":
				newTransaction(request, response);
				break;
			case "edit_profile":
				editProfile(request, response);
				break;
			case "view_passbook":
				viewPassbook(request, response);
				break;
			default:
				viewCustomerHome(request, response);
			}

		}
	 

	private void viewCustomerHome(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		
		RequestDispatcher requestDispatcher = request.getRequestDispatcher("/customerHome.jsp");
		
		requestDispatcher.forward(request, response);
	}


	private void viewPassbook(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		
		HttpSession session = request.getSession();
        Customer customer = (Customer) session.getAttribute("customer");
        System.out.println(customer);
		
		List<Transaction> customerTransactions = customerDao.viewCustomerTransaction(customer);
		
		System.out.println(customerTransactions);
		
		request.setAttribute("customerTransactionList", customerTransactions);
		
		RequestDispatcher requestDispatcher = request.getRequestDispatcher("/viewPassbook.jsp");
		
		requestDispatcher.forward(request, response);
		
	}


	private void editProfile(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		
		HttpSession session = request.getSession();
        Customer customer = (Customer) session.getAttribute("customer");
		
		customer.setFirstName(request.getParameter("first_name"));
		customer.setLastName(request.getParameter("last_name"));
		customer.setPassword(request.getParameter("password"));
		
		boolean addedOrNot = bankDao.updateCustomerProfile(customer);
		
		if(addedOrNot) {
			System.out.println("Customer Details updated successfully");
			response.sendRedirect("user?command=view_passbook");
		}
		
	    else {
		    request.setAttribute("errorMessage", "Transaction failed. Please try again.");
	        RequestDispatcher requestDispatcher = request.getRequestDispatcher("/newTransaction.jsp");
	        requestDispatcher.forward(request, response);
	    }
		
	}


	private void newTransaction(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		
		HttpSession session = request.getSession();
        Customer customer = (Customer) session.getAttribute("customer");
		
		String transactionType = request.getParameter("transaction_type");
	    double amount = Double.parseDouble(request.getParameter("amount"));
	    
	    Transaction transaction = new Transaction(customer.getId(), customer.getId(), transactionType, amount);
	    
	    if ("transfer".equals(transactionType)) {
	    	int toAccountNumber = Integer.parseInt(request.getParameter("to_account_number"));
	        transaction.setReceiverAccountNumber(toAccountNumber);
	    }
		
	    boolean transactionSuccessful = bankDao.newTransaction(transaction);
	    
	    if (transactionSuccessful) {
	    	System.out.println("Transaction successful");
	    	response.sendRedirect("user?command=view_passbook");
	    }
	    else {
	        request.setAttribute("errorMessage", "Transaction failed. Please try again.");
	        RequestDispatcher requestDispatcher = request.getRequestDispatcher("/newTransaction.jsp");
	        requestDispatcher.forward(request, response);
	    }
	}


	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		doGet(request, response);
	}

}
